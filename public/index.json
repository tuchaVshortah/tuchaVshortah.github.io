[{"content":"About Git and Remote Code Repositories Git was designed to enable versioning of the source code. You can use it to store and modify your code reliably in a local or a remote repository. It allows you to collaborate with others and revert changes if you need to do so. The main advantage of using Git it shows how the source code changed and the descriptions and comments left by developers.\nRemote code repositories such as Github and GitLab allow you to conveniently share your code with others. Depending on your needs you might want to verify your identity you create new commits. Both Github and GitLab allow you to do so by utilizing signed commits. We will focus on Github in this article.\nAbout Verified/Signed commits By default, whenever you push a commit to a remote Github repository it does not know a true identity attached to the commit. This might, potentially, make it harder for other users and your collaborators verify your identity.\nOther changes applied through the Github\u0026rsquo;s web interface and pull requests are verified using a verified signature managed by Github.\nDepending on your needs you might want to use your own signature to verify your commits and other changes such as merge requests.\nThis can be configured by notifying Github about the identity or a GPG key attached to your commits.\nLearn more\nInstall Git Windows To install Git on Windows you might open a Powershell terminal and paste this command:\n1winget install --id Git.Git -e --source winget Ubuntu Use this command to install Git on Ubuntu:\n1apt-get install git Or you can add a PPA for the latest stable version:\n1add-apt-repository ppa:git-core/ppa Mac On Mac if you have homebrew installed:\n1brew install git Or if you have MacPorts installed:\n1sudo port install git Learn more\nInstall GPG Canonical release forms can be found here: www.gnupg.org/download/\nWindows You can download a full featured binary release from gpg4win.org\nLinux Download a package using a package manager of your distribution.\nMac Installer for MacOS can be downloaded from sourceforge.net/p/gpgosx/docu/Download/\nCreate a GPG key pair Windows/Linux/Mac For the version 2.1.17 or above:\n1gpg --full-generate-key For versions lower than 2.1.17:\n1gpg --default-new-key-algo rsa4096 --gen-key Learn more\nExport your PGP public key This step is required to let Github be able to verify your signature. Otherwise Github would not be able to distinguish the relation between your public and private keys. Remember that private keys are used only to sign your commits locally. Public keys can be used to verify the signature.\nWindows/Linux/Mac Use this command to list your keys. Copy a fingerprint of the key you just created. Let\u0026rsquo;s use 3AA5C34371567BD2:\n1gpg --list-secret-keys --keyid-format=long 2/Users/hubot/.gnupg/secring.gpg 3------------------------------------ 4sec 4096R/3AA5C34371567BD2 2016-03-10 [expires: 2017-03-10] 5uid Hubot \u0026lt;hubot@example.com\u0026gt; 6ssb 4096R/4BB6D45482678BE3 2016-03-10 Let\u0026rsquo;s export the public key block relevant to that key:\n1gpg --armor --export 3AA5C34371567BD2 2# Prints the GPG key ID, in ASCII armor format Learn more\nAdd the Public key block to your Github account After you have copied the Public Key Block relevant to your Private Key you can add it to your Github account\nNavigate to Github and click on your profile icon on the top right and click on Settings: Click on SSH and GPG keys: Press the New GPG Key button*: Then paste the Public Key Block and press Add GPG Key: Congrats! You have successfully added your public key to Github. There is only one step left - telling git which key to use to sign commits.\nLearn more\nConfigure signed commits for Git Before configuring signature verification on Github you have to first setup Git and attach an identity that will be used to sign your commits.\nBasically, you are required to tell Git the following information in order to be able to push commits: username and email. Everything else is optional.\nConfigure a username and an email:\n1git config set user.name \u0026#34;\u0026lt;your_name\u0026gt; \u0026lt;your_surname\u0026gt;\u0026#34; 2git config set user.email \u0026#34;\u0026lt;your_username\u0026gt;@\u0026lt;server\u0026gt;.\u0026lt;tld\u0026gt;\u0026#34; Configure the GPG program, enable GPG commit signing and set the fingerprint of your private key:\n1# Use the path where GPG installation is located. 2# Your actual installation might differ from the one in the example. 3# Make sure to verify the path or git would not be able to sign commits. 4git config set gpg.program \u0026#34;C:\\Program Files (x86)\\GnuPG\\bin\\gpg.exe\u0026#34; 5 6# Make sure to use fingerprint of the correct private key. 7# Otherwise git and Github would be configure for different key pairs. 8# You can list your keys using the command from a previous step. 9git config set user.signingKey 3AA5C34371567BD2 10 11# Enable GPG commit signing. 12git config set commit.gpgSign true Congratulations! I am glad to tell you that you have a completed the setup and can verify your results by creating a commit. Remember that the system will periodically ask you for the password you have used to encrypt your private key. Do not share this password and the private key.\nI hope you enjoyed this tutorial. If so, please consider leaving a comment or a reaction below. Thank you for your attention!\n","permalink":"http://localhost:1313/posts/how_to_configure_git/","summary":"\u003ch1 id=\"about-git-and-remote-code-repositories\"\u003eAbout Git and Remote Code Repositories\u003c/h1\u003e\n\u003cp\u003eGit was designed to enable versioning of the source code. You can use it to store and modify your code reliably in a local or a remote repository. It allows you to collaborate with others and revert changes if you need to do so. The main advantage of using Git it shows how the source code changed and the descriptions and comments left by developers.\u003c/p\u003e","title":"How to configure Git"},{"content":"About me My name is Nurkanat and I am 20 years old. I am a developer with a passion for protecting digital assets and systems from cyber threats. I have a certification in \u0026ldquo;Malware Analysis and Introduction to Assembly Language\u0026rdquo; from IBM, and \u0026ldquo;Google Cybersecurity Professional Certificate\u0026rdquo; from Google.\nVision \u0026amp; Mission Vision I like WEB\u0026amp;Cloud development and setting up DevOps workflows. This is mainly because I think that those technologies are fundamental nowadays.\nMission I find my passion in creating and securing reliable systems. My mission is to develop convenient and powerful software on durable and industry leading platforms.\nEducational background Astana IT University (2021-2024) Bachelor of Cybersecurity Department of Informational Security Suleyman Demirel University (2024 - Today) Master of Computer Science Faculty of Engineering and Natural Sciences Work experience 2021 (3 months) Development Bank of Kazakhstan - Cybersecurity Engineer\nResponsibilities:\nI worked as a cybersecurity engineer at Development Bank of Kazakhstan (DBK), where I applied my skills in Python and Rust to test the bank\u0026rsquo;s network security and develop software that would detect ARP spoofing attacks in local network. In three months, I contributed to enhancing the bank\u0026rsquo;s cybersecurity posture and preventing potential breaches. I also learned new techniques and tools from my colleagues and mentors, who were experienced and supportive professionals in this domain.\nProjects:\narp-spoofing-detector-rs\n2024 (6 months) Akhmet Yassawi University - IT Specialist\nResponsibilities:\nMy responsibilties included managing employee accounts and sites. I uploaded the necessary information to the sites and updated them. I helped the staff to fill out, set up and regain access to their work accounts if they lost it.\n2024 (5 months) Epam Systems - Student Cloud\u0026amp;DevOps Trainee (Apprenticeship)\nWhat did I do?\nI participated in a competition organized by Epam, which included a few interviews and a few weeks-long course covering the fundamentals of Docker, Kubernetes, and DevOps. All participants were required to complete the course by a certain deadline, or they would be disqualified.\nI successfully completed the course and moved on to the next one, the DevOps Bootcamp. This bootcamp was a logical continuation of the previous course, and it covered a wide range of topics, including Docker, CI/CD, Jenkins, GitHub/GitLab CI, Kubernetes, AWS, and Terraform.\nThe Bootcamp was both challenging and incredibly interesting. I learned many new skills and worked with tools and software that I was unfamiliar with before. By the end of the bootcamp, we also had a few sessions on Gen AI, Agile, and SDLC.. To summarize, by the end of the course, I had learned how to create Docker images, create Kubernetes clusters with persistent storage and various features such as DaemonSets and StatefulSets. I also learned how to use AWS resources like EC2, ECS, EKS, SNS, SQS, SSM, and KMS. I was able to write and deploy CloudFormation stacks and create resources in the cloud using Terraform. In addition, I learned many other things during the Bootcamp.\nI would like to thank the folks at Epam for organizing this amazing Bootcamp.\nPersonal achievements Almaty Marathon 2024 My goals I would like to expand my knowledge in the area of cloud technologies and DevOps, as well as contribute to the development of various cloud-based or on-premises services.\nMy final Goal is to become a well experienced and certified Cloud\u0026amp;Devops Developer with a strong competency in full stack WEB development.\nCertificates Google Cybersecurity Professional -\u0026gt; PDF\nMalware Analysis and Introduction to Assembly Language -\u0026gt; PDF\nCareer Essentials in Cybersecurity by Microsoft and LinkedIn -\u0026gt; PDF\nAWS Cloud Practitioner Essentials -\u0026gt; PDF\nIELTS Band 7.5 -\u0026gt; JPG\nAgile Foundations\nSoftware Design: From Requirements to Release\nSoftware Development Life Cycle (SDLC)\n","permalink":"http://localhost:1313/posts/whoami/","summary":"\u003ch1 id=\"about-me\"\u003eAbout me\u003c/h1\u003e\n\u003cp\u003eMy name is Nurkanat and I am 20 years old. I am a developer with a passion for protecting digital assets and systems from cyber threats. I have a certification in \u0026ldquo;Malware Analysis and Introduction to Assembly Language\u0026rdquo; from IBM, and \u0026ldquo;Google Cybersecurity Professional Certificate\u0026rdquo; from Google.\u003c/p\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003ch1 id=\"vision--mission\"\u003eVision \u0026amp; Mission\u003c/h1\u003e\n\u003ch2 id=\"vision\"\u003eVision\u003c/h2\u003e\n\u003cp\u003eI like WEB\u0026amp;Cloud development and setting up DevOps workflows. This is mainly because I think that those technologies are fundamental nowadays.\u003c/p\u003e","title":"whoami | About me"},{"content":"This is my first post.\n","permalink":"http://localhost:1313/posts/first_post/","summary":"\u003cp\u003e\u003cem\u003eThis is my first post.\u003c/em\u003e\u003c/p\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003c!-- raw HTML omitted --\u003e","title":"Hello world!"}]